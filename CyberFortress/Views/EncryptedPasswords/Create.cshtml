@model CyberFortress.Models.EncryptedPassword

@{
    ViewBag.Title = "Password Manager";
}

<h2>Save a new password</h2>

@using (Html.BeginForm("Create", "EncryptedPasswords", FormMethod.Post, new { @id = "form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EncryptedData, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EncryptedData, new { htmlAttributes = new { @class = "form-control", @id = "encrypted-data" } })
            @Html.ValidationMessageFor(model => model.EncryptedData, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <br />
        <p>Or, you can generate a random password</p>
        <div class="col-md-10">
            <label for="number">Choose password length:</label>
            <br />
            <input type="range" id="length" name="length" min="8" max="64" value="8" oninput="updateLength()">
            <p>Length: <span id="selectedLength">8</span></p>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Generate" class="btn btn-dark" onclick="generatePassword()"/>
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
    <br />
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/aes.js" integrity="sha256-/H4YS+7aYb9kJ5OKhFYPUjSJdrtV6AeyJOtTkw6X72o=" crossorigin="anonymous"></script>
     
    <script>
        $(document).ready(function () {
            $('#form').submit(function (event) {

                event.preventDefault();

                let masterPassword = prompt("Enter your master password:");
                if (masterPassword) {

                    let encrypted = CryptoJS.AES.encrypt(
                        document.getElementById("encrypted-data").value,
                        masterPassword
                    ).toString();

                    document.getElementById("encrypted-data").value = encrypted;
                } else {
                    alert("Master password is required to save the password.");
                    return;
                }

                this.submit();
            });
        });

        function generatePassword() {
            var chars = "0123456789abcdefghijklmnopqrstuvwxyz!@@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ";
            var passwordLength = document.getElementById("length").value;
            var password = "";
            for (var i = 0; i <= passwordLength; i++) {
                var randomNumber = Math.floor(Math.random() * chars.length);
                password += chars.substring(randomNumber, randomNumber +1);
            }
            document.getElementById("encrypted-data").value = password;
        }

        function updateLength() {
            var slider = document.getElementById("length");
            var output = document.getElementById("selectedLength");
            output.textContent = slider.value;
        }
    </script>
}